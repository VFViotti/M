let
  func = (TextValue as text) as text =>
    let
      //Remove extra spaces from the seed
      TextClean = List.Accumulate({1..5}, TextValue, (state, _) => Text.Replace(state, "  ", " ")),
      //Convert TextValue into a list of words by splitting at each space character
      List = Text.Split(TextClean, " "), 
      //Generate a list of non-printable crontol characters (ASCII codes 0-31)
      CharactersToRemove = List.Transform({0 .. 31}, each Character.FromNumber(_)), 
      //Remove non-printable control characters from TextList
      ListClean = List.RemoveItems(List, CharactersToRemove), 
      //Rejoin the list into a single text value with a space character between each item
      ListJoin = Text.Combine(ListClean, " ")
    in
      ListJoin, 
  documentation = [
    Documentation.Name = "TextHygene", 
    Documentation.LongDescription = "This function takes a text value removing any extra spaces, and non-printable characters (ASCII codes 0-32), and then joins back the words back into a single text value with single spaces." 
  ]
in
  Value.ReplaceType(func, Value.ReplaceMetadata(Value.Type(func), documentation))
